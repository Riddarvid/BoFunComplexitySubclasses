<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="454.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="437" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="437" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.finiteLookup (1 samples, 0.10%)</title><rect x="786.4" y="165" width="1.2" height="15.0" fill="rgb(220,145,16)" rx="2" ry="2" />
<text text-anchor="" x="789.44" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize.\.\ (1 samples, 0.10%)</title><rect x="951.6" y="37" width="1.2" height="15.0" fill="rgb(245,64,46)" rx="2" ry="2" />
<text text-anchor="" x="954.64" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoizeFinite (9 samples, 0.90%)</title><rect x="1173.5" y="197" width="10.6" height="15.0" fill="rgb(246,71,7)" rx="2" ry="2" />
<text text-anchor="" x="1176.48" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.btValue (1 samples, 0.10%)</title><rect x="786.4" y="133" width="1.2" height="15.0" fill="rgb(210,197,35)" rx="2" ry="2" />
<text text-anchor="" x="789.44" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize.\ (146 samples, 14.60%)</title><rect x="782.9" y="245" width="172.3" height="15.0" fill="rgb(239,63,0)" rx="2" ry="2" />
<text text-anchor="" x="785.90" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Function.Memoize...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize.\.cache.\ (30 samples, 3.00%)</title><rect x="787.6" y="165" width="35.4" height="15.0" fill="rgb(223,189,24)" rx="2" ry="2" />
<text text-anchor="" x="790.62" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Da..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Subclasses.Id.setBit (1 samples, 0.10%)</title><rect x="958.7" y="245" width="1.2" height="15.0" fill="rgb(221,104,5)" rx="2" ry="2" />
<text text-anchor="" x="961.72" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.scaleL (416 samples, 41.60%)</title><rect x="190.5" y="213" width="490.9" height="15.0" fill="rgb(248,110,48)" rx="2" ry="2" />
<text text-anchor="" x="193.54" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >DSLsofMath.PSDS.scaleL</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.zipWithLonger (176 samples, 17.60%)</title><rect x="963.4" y="229" width="207.7" height="15.0" fill="rgb(235,99,32)" rx="2" ry="2" />
<text text-anchor="" x="966.44" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >DSLsofMath.PSDS.zipWithLonger</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.* (642 samples, 64.20%)</title><rect x="17.1" y="261" width="757.5" height="15.0" fill="rgb(223,227,7)" rx="2" ry="2" />
<text text-anchor="" x="20.08" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >DSLsofMath.PSDS.*</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.+ (176 samples, 17.60%)</title><rect x="963.4" y="277" width="207.7" height="15.0" fill="rgb(229,18,32)" rx="2" ry="2" />
<text text-anchor="" x="966.44" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >DSLsofMath.PSDS.+</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.btValue (2 samples, 0.20%)</title><rect x="906.8" y="149" width="2.4" height="15.0" fill="rgb(225,68,19)" rx="2" ry="2" />
<text text-anchor="" x="909.80" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Poly.PiecewisePoly.* (650 samples, 65.00%)</title><rect x="15.9" y="277" width="767.0" height="15.0" fill="rgb(216,168,1)" rx="2" ry="2" />
<text text-anchor="" x="18.90" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Poly.PiecewisePoly.*</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.zipWithLonger.zWL (1 samples, 0.10%)</title><rect x="961.1" y="197" width="1.2" height="15.0" fill="rgb(232,188,38)" rx="2" ry="2" />
<text text-anchor="" x="964.08" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Poly.PiecewisePoly.piecewiseBinOp.opRegen (6 samples, 0.60%)</title><rect x="775.8" y="245" width="7.1" height="15.0" fill="rgb(254,115,36)" rx="2" ry="2" />
<text text-anchor="" x="778.82" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.Algebra.+ (2 samples, 0.20%)</title><rect x="959.9" y="293" width="2.4" height="15.0" fill="rgb(213,227,33)" rx="2" ry="2" />
<text text-anchor="" x="962.90" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Subclasses.Symmetric.setBit.subFun' (1 samples, 0.10%)</title><rect x="958.7" y="261" width="1.2" height="15.0" fill="rgb(220,95,5)" rx="2" ry="2" />
<text text-anchor="" x="961.72" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.Algebra.* (2 samples, 0.20%)</title><rect x="779.4" y="133" width="2.3" height="15.0" fill="rgb(246,195,34)" rx="2" ry="2" />
<text text-anchor="" x="782.36" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.finiteLookup.loop (30 samples, 3.00%)</title><rect x="787.6" y="101" width="35.4" height="15.0" fill="rgb(211,129,9)" rx="2" ry="2" />
<text text-anchor="" x="790.62" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Da..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Utils.mapPair (1 samples, 0.10%)</title><rect x="781.7" y="229" width="1.2" height="15.0" fill="rgb(253,199,0)" rx="2" ry="2" />
<text text-anchor="" x="784.72" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Subclasses.Symmetric.setBit.rv' (2 samples, 0.20%)</title><rect x="956.4" y="261" width="2.3" height="15.0" fill="rgb(237,158,22)" rx="2" ry="2" />
<text text-anchor="" x="959.36" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize (110 samples, 11.00%)</title><rect x="824.2" y="197" width="129.8" height="15.0" fill="rgb(212,8,43)" rx="2" ry="2" />
<text text-anchor="" x="827.20" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Function.Me..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.Algebra.+ (137 samples, 13.70%)</title><rect x="28.9" y="197" width="161.6" height="15.0" fill="rgb(238,8,44)" rx="2" ry="2" />
<text text-anchor="" x="31.88" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >DSLsofMath.Algebra.+</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.scaleL (3 samples, 0.30%)</title><rect x="778.2" y="149" width="3.5" height="15.0" fill="rgb(214,169,47)" rx="2" ry="2" />
<text text-anchor="" x="781.18" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoizeFinite (1 samples, 0.10%)</title><rect x="786.4" y="197" width="1.2" height="15.0" fill="rgb(212,220,20)" rx="2" ry="2" />
<text text-anchor="" x="789.44" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize.\.cache (142 samples, 14.20%)</title><rect x="787.6" y="229" width="167.6" height="15.0" fill="rgb(220,139,43)" rx="2" ry="2" />
<text text-anchor="" x="790.62" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Function.Memoize..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize.\ (1 samples, 0.10%)</title><rect x="951.6" y="133" width="1.2" height="15.0" fill="rgb(254,221,13)" rx="2" ry="2" />
<text text-anchor="" x="954.64" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.btLeft (7 samples, 0.70%)</title><rect x="806.5" y="85" width="8.3" height="15.0" fill="rgb(251,65,38)" rx="2" ry="2" />
<text text-anchor="" x="809.50" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.zipWithLonger (1 samples, 0.10%)</title><rect x="961.1" y="213" width="1.2" height="15.0" fill="rgb(235,111,49)" rx="2" ry="2" />
<text text-anchor="" x="964.08" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoizeFinite (30 samples, 3.00%)</title><rect x="787.6" y="149" width="35.4" height="15.0" fill="rgb(223,44,13)" rx="2" ry="2" />
<text text-anchor="" x="790.62" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Da..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Poly.PiecewisePoly.piecewiseBinOp.h (1 samples, 0.10%)</title><rect x="774.6" y="245" width="1.2" height="15.0" fill="rgb(223,190,48)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Subclasses.Symmetric.memoize (1 samples, 0.10%)</title><rect x="951.6" y="85" width="1.2" height="15.0" fill="rgb(215,2,52)" rx="2" ry="2" />
<text text-anchor="" x="954.64" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Utils.tabulateBool (1 samples, 0.10%)</title><rect x="781.7" y="213" width="1.2" height="15.0" fill="rgb(242,33,39)" rx="2" ry="2" />
<text text-anchor="" x="784.72" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize (146 samples, 14.60%)</title><rect x="782.9" y="261" width="172.3" height="15.0" fill="rgb(206,139,15)" rx="2" ry="2" />
<text text-anchor="" x="785.90" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Function.Memoize...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize.\ (1 samples, 0.10%)</title><rect x="951.6" y="53" width="1.2" height="15.0" fill="rgb(240,32,8)" rx="2" ry="2" />
<text text-anchor="" x="954.64" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.Algebra.+ (1 samples, 0.10%)</title><rect x="961.1" y="181" width="1.2" height="15.0" fill="rgb(247,14,5)" rx="2" ry="2" />
<text text-anchor="" x="964.08" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize.\.cache (1 samples, 0.10%)</title><rect x="951.6" y="117" width="1.2" height="15.0" fill="rgb(236,202,51)" rx="2" ry="2" />
<text text-anchor="" x="954.64" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.finiteLookup.loop (105 samples, 10.50%)</title><rect x="827.7" y="165" width="123.9" height="15.0" fill="rgb(210,193,7)" rx="2" ry="2" />
<text text-anchor="" x="830.74" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Function.M..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Poly.PiecewisePoly.+ (2 samples, 0.20%)</title><rect x="959.9" y="277" width="2.4" height="15.0" fill="rgb(252,21,8)" rx="2" ry="2" />
<text text-anchor="" x="962.90" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.meanFinite (3 samples, 0.30%)</title><rect x="819.5" y="69" width="3.5" height="15.0" fill="rgb(219,88,1)" rx="2" ry="2" />
<text text-anchor="" x="822.48" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Subclasses.Symmetric.memoize (146 samples, 14.60%)</title><rect x="782.9" y="277" width="172.3" height="15.0" fill="rgb(215,51,33)" rx="2" ry="2" />
<text text-anchor="" x="785.90" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Subclasses.Symmetric.m..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Subclasses.Symmetric.setBit (4 samples, 0.40%)</title><rect x="955.2" y="277" width="4.7" height="15.0" fill="rgb(254,202,22)" rx="2" ry="2" />
<text text-anchor="" x="958.18" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.MultiSet.toAscOccurList (1 samples, 0.10%)</title><rect x="952.8" y="133" width="1.2" height="15.0" fill="rgb(217,20,15)" rx="2" ry="2" />
<text text-anchor="" x="955.82" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.btLeft (20 samples, 2.00%)</title><rect x="882.0" y="149" width="23.6" height="15.0" fill="rgb(236,26,20)" rx="2" ry="2" />
<text text-anchor="" x="885.02" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >D..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize.\ (30 samples, 3.00%)</title><rect x="787.6" y="197" width="35.4" height="15.0" fill="rgb(248,42,36)" rx="2" ry="2" />
<text text-anchor="" x="790.62" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Da..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.finiteLookup (108 samples, 10.80%)</title><rect x="824.2" y="181" width="127.4" height="15.0" fill="rgb(226,50,12)" rx="2" ry="2" />
<text text-anchor="" x="827.20" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Function.Me..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize.\.cache (30 samples, 3.00%)</title><rect x="787.6" y="181" width="35.4" height="15.0" fill="rgb(235,185,3)" rx="2" ry="2" />
<text text-anchor="" x="790.62" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Da..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Subclasses.Symmetric.memoize (1 samples, 0.10%)</title><rect x="954.0" y="213" width="1.2" height="15.0" fill="rgb(227,172,44)" rx="2" ry="2" />
<text text-anchor="" x="957.00" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (1,000 samples, 100%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(217,217,51)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.zipWithLonger.zWL (79 samples, 7.90%)</title><rect x="681.4" y="229" width="93.2" height="15.0" fill="rgb(254,220,43)" rx="2" ry="2" />
<text text-anchor="" x="684.42" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >DSLsofMath...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Algorithm.GenAlgPW.computeMinStep (985 samples, 98.50%)</title><rect x="11.2" y="325" width="1162.3" height="15.0" fill="rgb(254,109,41)" rx="2" ry="2" />
<text text-anchor="" x="14.18" y="335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Algorithm.GenAlgPW.computeMinStep</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize.\.\ (3 samples, 0.30%)</title><rect x="784.1" y="229" width="3.5" height="15.0" fill="rgb(226,146,45)" rx="2" ry="2" />
<text text-anchor="" x="787.08" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoizeFinite (111 samples, 11.10%)</title><rect x="823.0" y="213" width="131.0" height="15.0" fill="rgb(249,223,5)" rx="2" ry="2" />
<text text-anchor="" x="826.02" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Function.Me..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.mulP (642 samples, 64.20%)</title><rect x="17.1" y="245" width="757.5" height="15.0" fill="rgb(254,205,47)" rx="2" ry="2" />
<text text-anchor="" x="20.08" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >DSLsofMath.PSDS.mulP</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.mulL (4 samples, 0.40%)</title><rect x="777.0" y="165" width="4.7" height="15.0" fill="rgb(213,190,24)" rx="2" ry="2" />
<text text-anchor="" x="780.00" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.fmap (8 samples, 0.80%)</title><rect x="1174.7" y="165" width="9.4" height="15.0" fill="rgb(215,97,10)" rx="2" ry="2" />
<text text-anchor="" x="1177.66" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize (30 samples, 3.00%)</title><rect x="787.6" y="213" width="35.4" height="15.0" fill="rgb(253,118,27)" rx="2" ry="2" />
<text text-anchor="" x="790.62" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Da..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.addL (137 samples, 13.70%)</title><rect x="28.9" y="213" width="161.6" height="15.0" fill="rgb(231,51,10)" rx="2" ry="2" />
<text text-anchor="" x="31.88" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >DSLsofMath.PSDS.addL</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Poly.PiecewisePoly.zoom (5 samples, 0.50%)</title><rect x="775.8" y="213" width="5.9" height="15.0" fill="rgb(213,85,36)" rx="2" ry="2" />
<text text-anchor="" x="778.82" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.addL (176 samples, 17.60%)</title><rect x="963.4" y="245" width="207.7" height="15.0" fill="rgb(252,181,49)" rx="2" ry="2" />
<text text-anchor="" x="966.44" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >DSLsofMath.PSDS.addL</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Poly.PiecewisePoly.zoomedGenerate (5 samples, 0.50%)</title><rect x="775.8" y="229" width="5.9" height="15.0" fill="rgb(248,192,39)" rx="2" ry="2" />
<text text-anchor="" x="778.82" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.finiteLookup.loop.mean (7 samples, 0.70%)</title><rect x="814.8" y="85" width="8.2" height="15.0" fill="rgb(217,203,50)" rx="2" ry="2" />
<text text-anchor="" x="817.76" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Utils.memoize (1 samples, 0.10%)</title><rect x="952.8" y="149" width="1.2" height="15.0" fill="rgb(252,154,34)" rx="2" ry="2" />
<text text-anchor="" x="955.82" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.addL (1 samples, 0.10%)</title><rect x="777.0" y="149" width="1.2" height="15.0" fill="rgb(214,92,40)" rx="2" ry="2" />
<text text-anchor="" x="780.00" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>LibMain.CAF:main_x1 (995 samples, 99.50%)</title><rect x="11.2" y="373" width="1174.1" height="15.0" fill="rgb(226,122,21)" rx="2" ry="2" />
<text text-anchor="" x="14.18" y="383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >LibMain.CAF:main_x1</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.comP (5 samples, 0.50%)</title><rect x="775.8" y="197" width="5.9" height="15.0" fill="rgb(224,131,15)" rx="2" ry="2" />
<text text-anchor="" x="778.82" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.Algebra.+ (1 samples, 0.10%)</title><rect x="773.5" y="181" width="1.1" height="15.0" fill="rgb(211,187,52)" rx="2" ry="2" />
<text text-anchor="" x="776.46" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>UNKNOWN (4 samples, 0.40%)</title><rect x="1185.3" y="389" width="4.7" height="15.0" fill="rgb(234,191,12)" rx="2" ry="2" />
<text text-anchor="" x="1188.28" y="399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.addP (176 samples, 17.60%)</title><rect x="963.4" y="261" width="207.7" height="15.0" fill="rgb(239,38,46)" rx="2" ry="2" />
<text text-anchor="" x="966.44" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >DSLsofMath.PSDS.addP</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize (1 samples, 0.10%)</title><rect x="951.6" y="149" width="1.2" height="15.0" fill="rgb(209,144,40)" rx="2" ry="2" />
<text text-anchor="" x="954.64" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Algorithm.GenAlgPW.computeMinStep.\.(...) (802 samples, 80.20%)</title><rect x="13.5" y="293" width="946.4" height="15.0" fill="rgb(236,105,2)" rx="2" ry="2" />
<text text-anchor="" x="16.54" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Algorithm.GenAlgPW.computeMinStep.\.(...)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.addP (1 samples, 0.10%)</title><rect x="961.1" y="245" width="1.2" height="15.0" fill="rgb(215,44,40)" rx="2" ry="2" />
<text text-anchor="" x="964.08" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize.\.cache (1 samples, 0.10%)</title><rect x="786.4" y="213" width="1.2" height="15.0" fill="rgb(219,88,18)" rx="2" ry="2" />
<text text-anchor="" x="789.44" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.fromEnum (1 samples, 0.10%)</title><rect x="826.6" y="149" width="1.1" height="15.0" fill="rgb(251,218,41)" rx="2" ry="2" />
<text text-anchor="" x="829.56" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Subclasses.Symmetric.variables (2 samples, 0.20%)</title><rect x="1171.1" y="293" width="2.4" height="15.0" fill="rgb(229,171,44)" rx="2" ry="2" />
<text text-anchor="" x="1174.12" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.fmap (2 samples, 0.20%)</title><rect x="951.6" y="181" width="2.4" height="15.0" fill="rgb(240,77,31)" rx="2" ry="2" />
<text text-anchor="" x="954.64" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.MultiSet.toAscOccurList (1 samples, 0.10%)</title><rect x="1172.3" y="277" width="1.2" height="15.0" fill="rgb(217,164,33)" rx="2" ry="2" />
<text text-anchor="" x="1175.30" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>MAIN.MAIN (996 samples, 99.60%)</title><rect x="10.0" y="389" width="1175.3" height="15.0" fill="rgb(210,35,1)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >MAIN.MAIN</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize (1 samples, 0.10%)</title><rect x="951.6" y="69" width="1.2" height="15.0" fill="rgb(213,192,29)" rx="2" ry="2" />
<text text-anchor="" x="954.64" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Poly.PiecewisePoly.piecewiseBinOp (7 samples, 0.70%)</title><rect x="774.6" y="261" width="8.3" height="15.0" fill="rgb(250,136,52)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize.\.cache.\.\ (1 samples, 0.10%)</title><rect x="951.6" y="101" width="1.2" height="15.0" fill="rgb(220,186,50)" rx="2" ry="2" />
<text text-anchor="" x="954.64" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Subclasses.Symmetric.removeLowest (1 samples, 0.10%)</title><rect x="957.5" y="245" width="1.2" height="15.0" fill="rgb(248,140,50)" rx="2" ry="2" />
<text text-anchor="" x="960.54" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.finiteLookup.loop (1 samples, 0.10%)</title><rect x="786.4" y="149" width="1.2" height="15.0" fill="rgb(225,223,20)" rx="2" ry="2" />
<text text-anchor="" x="789.44" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize.\.cache.\ (2 samples, 0.20%)</title><rect x="951.6" y="165" width="2.4" height="15.0" fill="rgb(221,0,26)" rx="2" ry="2" />
<text text-anchor="" x="954.64" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.Algebra.+ (80 samples, 8.00%)</title><rect x="1076.7" y="197" width="94.4" height="15.0" fill="rgb(209,130,8)" rx="2" ry="2" />
<text text-anchor="" x="1079.72" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >DSLsofMath...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.MultiSet.fromAscOccurList (1 samples, 0.10%)</title><rect x="1184.1" y="181" width="1.2" height="15.0" fill="rgb(253,153,24)" rx="2" ry="2" />
<text text-anchor="" x="1187.10" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.addL (1 samples, 0.10%)</title><rect x="773.5" y="197" width="1.1" height="15.0" fill="rgb(232,64,53)" rx="2" ry="2" />
<text text-anchor="" x="776.46" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.Algebra.+ (1 samples, 0.10%)</title><rect x="777.0" y="133" width="1.2" height="15.0" fill="rgb(221,183,38)" rx="2" ry="2" />
<text text-anchor="" x="780.00" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.btRight (1 samples, 0.10%)</title><rect x="905.6" y="149" width="1.2" height="15.0" fill="rgb(241,185,51)" rx="2" ry="2" />
<text text-anchor="" x="908.62" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Algorithm.GenAlgPW.computeMinStep.\ (985 samples, 98.50%)</title><rect x="11.2" y="309" width="1162.3" height="15.0" fill="rgb(234,185,12)" rx="2" ry="2" />
<text text-anchor="" x="14.18" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Algorithm.GenAlgPW.computeMinStep.\</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.addL (1 samples, 0.10%)</title><rect x="961.1" y="229" width="1.2" height="15.0" fill="rgb(246,217,18)" rx="2" ry="2" />
<text text-anchor="" x="964.08" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.finiteLookup.loop.mean (36 samples, 3.60%)</title><rect x="909.2" y="149" width="42.4" height="15.0" fill="rgb(216,77,3)" rx="2" ry="2" />
<text text-anchor="" x="912.16" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.mulL (555 samples, 55.50%)</title><rect x="26.5" y="229" width="654.9" height="15.0" fill="rgb(231,132,16)" rx="2" ry="2" />
<text text-anchor="" x="29.52" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >DSLsofMath.PSDS.mulL</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.+ (1 samples, 0.10%)</title><rect x="961.1" y="261" width="1.2" height="15.0" fill="rgb(206,229,0)" rx="2" ry="2" />
<text text-anchor="" x="964.08" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Poly.PiecewisePoly.+ (177 samples, 17.70%)</title><rect x="962.3" y="293" width="208.8" height="15.0" fill="rgb(228,92,43)" rx="2" ry="2" />
<text text-anchor="" x="965.26" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Poly.PiecewisePoly.+</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.mulL (1 samples, 0.10%)</title><rect x="773.5" y="213" width="1.1" height="15.0" fill="rgb(208,191,38)" rx="2" ry="2" />
<text text-anchor="" x="776.46" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.Algebra.* (221 samples, 22.10%)</title><rect x="420.6" y="197" width="260.8" height="15.0" fill="rgb(248,144,14)" rx="2" ry="2" />
<text text-anchor="" x="423.64" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >DSLsofMath.Algebra.*</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.zipWithLonger.zWL (176 samples, 17.60%)</title><rect x="963.4" y="213" width="207.7" height="15.0" fill="rgb(225,42,16)" rx="2" ry="2" />
<text text-anchor="" x="966.44" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >DSLsofMath.PSDS.zipWithLong..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.finiteLookup.a (1 samples, 0.10%)</title><rect x="826.6" y="165" width="1.1" height="15.0" fill="rgb(240,6,48)" rx="2" ry="2" />
<text text-anchor="" x="829.56" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.memoize (1 samples, 0.10%)</title><rect x="786.4" y="181" width="1.2" height="15.0" fill="rgb(242,217,26)" rx="2" ry="2" />
<text text-anchor="" x="789.44" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DSLsofMath.PSDS.comL (5 samples, 0.50%)</title><rect x="775.8" y="181" width="5.9" height="15.0" fill="rgb(223,95,40)" rx="2" ry="2" />
<text text-anchor="" x="778.82" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.meanFinite (11 samples, 1.10%)</title><rect x="938.7" y="133" width="12.9" height="15.0" fill="rgb(232,79,4)" rx="2" ry="2" />
<text text-anchor="" x="941.66" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Function.Memoize.finiteLookup (30 samples, 3.00%)</title><rect x="787.6" y="117" width="35.4" height="15.0" fill="rgb(210,121,19)" rx="2" ry="2" />
<text text-anchor="" x="790.62" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Da..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Subclasses.Symmetric.removeHighest (1 samples, 0.10%)</title><rect x="956.4" y="245" width="1.1" height="15.0" fill="rgb(219,30,19)" rx="2" ry="2" />
<text text-anchor="" x="959.36" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
